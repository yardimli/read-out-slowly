/* ... existing styles ... */

/* Styles that were previously incorrectly nested */
.modal-body .list-group-item {
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.modal-body .list-group-item .text-preview {
    flex-grow: 1;
    margin-right: 10px;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

#aiPreviewArea {
    white-space: pre-wrap;
    max-height: 300px;
    overflow-y: auto;
    border: 1px solid #ccc;
    padding: 10px;
    background-color: #f8f9fa;
}

/* Styles for fixed playback controls */
#playbackControlsContainer {
    position: fixed;
    bottom: 0;
    left: 0;
    width: 100%;
    background-color: #f8f9fa; /* Light mode default */
    padding: 1rem; /* Bootstrap standard padding, e.g., 16px */
    border-top: 1px solid #dee2e6; /* Light mode border */
    z-index: 1030; /* Bootstrap fixed-top z-index */
    box-shadow: 0 -2px 5px rgba(0, 0, 0, 0.05); /* Softer shadow */ /* Flexbox for centering buttons */
    display: flex;
    justify-content: center;
    align-items: center;
}

/* Add padding to the bottom of the main container when playback controls are active */
body.playback-controls-active > .container { /* Adjust this value based on the actual height of #playbackControlsContainer */ /* Approx: 1rem padding + button height ( ~38px ) + 1rem padding + border (1px) = ~71px. Add some buffer. */
    padding-bottom: 80px;
}

/* Styles for hold-to-activate spinner */
#holdSpinnerOverlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%; /*background-color: rgba(0, 0, 0, 0.1);*/
    z-index: 10000; /* High z-index to be on top */
    display: flex; /* Use flexbox for centering */
    justify-content: center;
    align-items: center; /* display: none; by default, managed by JS */
}

#holdSpinner {
    width: 120px;
    height: 120px;
    border-radius: 50%;
    background: conic-gradient(dodgerblue 0deg, #444 0deg); /* Initial state */
    display: flex;
    justify-content: center;
    align-items: center; /* font-size: 1.5em; Removed, text size now controlled by #holdSpinnerProgressText */
    color: white; /* Default color for children */
    text-shadow: 1px 1px 2px black; /* Default shadow for children */
}

#holdSpinnerProgressText {
    font-size: 2.2rem; /* Larger font size for the percentage */
    font-weight: bold; /* Inherits color and text-shadow from #holdSpinner */
}

/* Styles for the card containing displayText */
#displayTextCard {
    position: relative; /* Needed for absolute positioning of children */
    background-color: #f1f3f5; /* A slightly off-white for light mode */ /* border is handled by Bootstrap's .card class */
}

#displayText {
    /*white-space: pre-wrap; !* Preserve line breaks and spaces *!*/
    min-height: 250px; /* Minimum height */ /*max-height: 250px; !* Maximum height before scrolling *!*/ /*overflow-y: auto; !* Add scrollbar if content exceeds max-height *!*/ /* font-size will be set by JS. Default browser font-size will apply initially. */ /* Text color will be default or from dark mode theme */ /* card-body provides padding */
}

/* Dark Mode Styles */ /* Bootstrap 5.3 uses data-bs-theme="dark" on the <html> element */
[data-bs-theme="dark"] #displayTextCard {
    background-color: #272b30; /* A slightly different dark shade */ /* border-color for .card in dark mode is usually handled by Bootstrap vars or specific overrides */
}

[data-bs-theme="dark"] #displayText { /* background-color: #2c3034; -- REMOVED, card has bg */ /* border-color: #495057; -- REMOVED, card has border */
    color: #f8f9fa; /* Ensure text is light */
}

[data-bs-theme="dark"] #aiPreviewArea {
    background-color: #2c3034 !important; /* Consistent with displayText */
    border-color: #495057 !important;
    color: #f8f9fa !important; /* Ensure text is light */
}

[data-bs-theme="dark"] .highlight {
    background-color: #b38600; /* Darker yellow/gold */
    color: #ffffff; /* White text on dark yellow */
}

[data-bs-theme="dark"] .modal-body .list-group-item {
    background-color: #343a40;
    border-color: #495057; /* color will be inherited or set by Bootstrap's dark theme for modal content */
}

[data-bs-theme="dark"] .modal-body .list-group-item .text-preview {
    color: #adb5bd; /* Slightly dimmer text for preview in dark mode */
}

[data-bs-theme="dark"] .modal-body .list-group-item:hover .text-preview {
    color: #f8f9fa; /* Brighter on hover */
}

[data-bs-theme="dark"] #holdSpinner {
    background: conic-gradient(dodgerblue 0deg, #6c757d 0deg); /* Use a lighter gray for the 'off' part */ /* color: white; remains white (inherited by child span) */ /* text-shadow: 1px 1px 2px #000; shadow might be less prominent but okay (inherited by child span) */
}

/* Dark mode for fixed playback controls */
[data-bs-theme="dark"] #playbackControlsContainer {
    background-color: #212529; /* Bootstrap dark background color */
    border-top-color: #495057; /* Darker border for dark mode */
}

/* Ensure form inputs are styled correctly if Bootstrap defaults are not enough */
[data-bs-theme="dark"] .form-control::placeholder {
    color: #6c757d; /* Lighter placeholder text for dark inputs */
}

[data-bs-theme="dark"] .form-check-input:not(:checked) {
    background-color: #495057;
    border-color: #6c757d;
}

/* Bootstrap handles :checked state well with primary color */ /* General text elements if Bootstrap's defaults need tweaking */
[data-bs-theme="dark"] h1, [data-bs-theme="dark"] h5.modal-title, /* Ensure modal titles are light */
[data-bs-theme="dark"] label, [data-bs-theme="dark"] .form-check-label { /* color: #f8f9fa; Bootstrap should handle this, but can be explicit if needed */
}

/* Ensure status message text is readable */
[data-bs-theme="dark"] .alert { /* Bootstrap 5.3 handles alert variants in dark mode automatically by changing CSS variables. For example, .alert-info will have a dark background and light text. No specific overrides should be needed here unless you want to customize Bootstrap's dark alerts. */
}

/* Styles for unread text */
.unread-text {
    opacity: 0.3; /* Default, will be controlled by JS */
    transition: opacity 0.3s ease;
}

#floatingPlayButton {
    position: absolute;
    z-index: 100;
    /*display: none; !* Initially hidden, shown by JS when needed *!*/
    transition: opacity 0.3s ease;
    /* Make the button more visible */
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
}


/* When the button is shown we need a bit of space in the text */
.continue-button-space {
    display: inline-block;
    height: 45px;
    width: 10px;
}
